<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logic on opensource-philosophy</title>
    
    
    
    <link>https://Perangelot.github.io/tags/logic/</link>
    <description>Recent content in logic on opensource-philosophy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Apr 2022 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://Perangelot.github.io/tags/logic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Completeness</title>
      <link>https://Perangelot.github.io/posts/functional-completeness-vom-08.04.2022/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0200</pubDate>
      
      <guid>https://Perangelot.github.io/posts/functional-completeness-vom-08.04.2022/</guid>
      <description>
        
          
          
          
        
        
        
          In most logic courses, the connectives of classical logic are defined in terms of two primitive connectives. But why does it work, and why should one bother instead of introducing every connective as primitive? This post aims to answer these questions by explaining the concept of *functional completeness*.
          
        
        </description>
    </item>
    
  </channel>
</rss>