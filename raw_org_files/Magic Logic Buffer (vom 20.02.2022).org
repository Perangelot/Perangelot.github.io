:PROPERTIES:
:ID:       20220220T224106.883187
:CATEGORY: Website
:CREATED:  [2022-02-20 So 22:41]
:END:
#+title: Magic Logic Buffer
#+date: [2022-02-20 So]
#+filetags: blog-post
#+hugo_base_dir: ../
#+hugo_section: posts
#+hugo_type: post
#+hugo_custom_front_matter: :tikzjax true :draft true
 # #+hugo_lastmod:
#+hugo_tags:
#+csl-style: ../static/apa.csl
#+csl-locale: en-US
#+description:

(setq mlogb-enable-colors nil) → disable coloring


(setq mlogb-enable-pretty-symbols nil) disable pretty symbols aus

Add to mode-map:
  (with-eval-after-load 'magic-logic-buffer
  (bind-key "<key>" #'function  magic-logic-buffer-map))

Add to list:

 (with-eval-after-load 'magic-logic-buffer
   (add-to-list 'mlogb-color-commands
     '("color" . "r,g,b")))

mlogb-enable-delete-LaTeX-macros

funktion weiteren namen geben: (defalias 'qrr 'query-replace-regexp)

#+BEGIN_SRC emacs-lisp
At first, you can do all these in a single ‘with-eval-after-load’
clause.  Also, ‘add-to-list’ and ‘delete’ will add/remove only one color
at a time, so you have to repeat them many times to add/remove all the
colors you need.  You can do it more efficiently and concise using
‘append’ and ‘delete-if’ like so:

(with-eval-after-load 'magic-logic-buffer
  (append
   ;; colors to add
   '(("kgrün"         "0,190,0")
     ("dgelb"         "255,210,70")
     ("hblau"         "0,176,240"))
   (delete-if (lambda (color-spec)
                (member (car color-spec)
                        ;; colors to remove
                        '("green" "blue" "yellow")))
              mlogb-color-commands))
  ;; add to mode-map (e.g. conversion function) ;;
  (bind-key "<key>" #'function  magic-logic-buffer-map))
#+END_SRC
