<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logic on opensource-philosophy</title>
    
    
    
    <link>https://Perangelot.github.io/tags/logic/</link>
    <description>Recent content in logic on opensource-philosophy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Apr 2022 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://Perangelot.github.io/tags/logic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Introduction to Frege&#39;s Notation</title>
      <link>https://Perangelot.github.io/posts/an-introduction-to-freges-notation-vom-08.04.2022/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0200</pubDate>
      
      <guid>https://Perangelot.github.io/posts/an-introduction-to-freges-notation-vom-08.04.2022/</guid>
      <description>
        
          
          
          
        
        
        
          Gottlob Frege is, although neglected during his life time, one of the most important philosophers of the 20th century. Nonetheless, many people shy away from reading texts in which he uses his notation of logic known from the Begriffsschrift, often claiming it is overcomplex or too hard to understand. In this post, my aim is to show that this claim is plain false. To do that, we will have a look at its basic concepts (*cough*) and see that the only reason why Freges Begriffsschrift has a bad reputation is that people did not even try to understand it.
          
        
        </description>
    </item>
    
    <item>
      <title>Functional Completeness</title>
      <link>https://Perangelot.github.io/posts/functional-completeness-vom-08.04.2022/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0200</pubDate>
      
      <guid>https://Perangelot.github.io/posts/functional-completeness-vom-08.04.2022/</guid>
      <description>
        
          
          
          
        
        
        
          In most definitions of classical logic, some connectives are introduced as abbreviations of other, so-called primitive connectives. But why does it work, and why should one bother instead of just introducing every connective as primitive? In this post, I am going to tackle these questions by explaining what the functional completeness is and how it is used to make meta-language proofs shorter.
          
        
        </description>
    </item>
    
  </channel>
</rss>